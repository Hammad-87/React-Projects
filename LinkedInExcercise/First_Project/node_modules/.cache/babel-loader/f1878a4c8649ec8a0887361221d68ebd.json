{"ast":null,"code":"var _jsxFileName = \"C:\\\\FIT_2020\\\\Practice\\\\start\\\\react-is-fun\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nconst skiData = {\n  total: 50,\n  powder: 20,\n  backcountry: 10,\n  goal: 100\n};\n\nconst getPercent = decimal => {\n  return decimal * 100 + '%';\n};\n\nconst calcGoalProgress = (total, goal) => {\n  return getPercent(total / goal);\n};\n\nconst SkiDayCounter = ({\n  total,\n  powder,\n  backcountry,\n  goal\n}) => {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"Total Days: \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Powder Days: \", powder), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"backcountry Days: \", backcountry), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Goal Progress: \", calcGoalProgress(total, goal))));\n};\n\nrender( /*#__PURE__*/React.createElement(SkiDayCounter, {\n  total: skiData.total,\n  powder: skiData.powder,\n  backcountry: skiData.backcountry,\n  goal: skiData.goal,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/* const skiData={\n  total:50,\n  powder:20,\n  backcountry:10,\n  goal:100\n}\n\nclass SkiDayCounter extends React.Component{\n  render() {\n    return (\n      <section>\n        <div>\n    <p>Total Days: {this.props.total}</p>\n    <p>Powder: {this.props.powder}</p>\n    <p>backcountry: {this.props.total}</p>\n    <p>Goal: {this.props.goal}</p>\n        </div>\n      </section>\n    )\n  }\n}\n\nReactDOM.render(\n  <SkiDayCounter\n    total = {skiData.total}\n    powder= {skiData.powder}\n    backcountry={skiData.backcountry}\n    goal={skiData.goal}/>,\n  \n  document.getElementById('root')\n) */\n\n/* let style = {\n  backgroundColor: 'orange',\n  color: 'white',\n  fontFamily: 'Arial'\n}\n */\n\n/* const title = React.createElement(\n  'ul',\n  {id: 'title', className: 'header', style: style},\n  React.createElement(\n    'li',\n    {},\n    'item on our list'\n  )\n)\n */\n\n/* ReactDOM.render(\n  title,\n  document.getElementById('root')\n\n) */\n\n/* class Message extends React.Component {\n  render(){\n    console.log(this.props)\n    return (\n      <div>\n        <h1 style={{color: this.props.color}}>{this.props.msg}</h1>\n    <p> I will back in {this.props.minutes}</p>\n      </div>\n    )\n  }\n}\n */\n\n/* class SkiDayCounter extends Component{\n  getPercent = decimal => {\n    return decimal * 100 +'%'\n  }\n\n  calcGoalProgress = (total, goal)=>{\n    return this.getPercent(total/goal)\n  }\n  render() {\n    const {total, powder, backcountry, goal} = this.props\n    return (\n      <section>\n        <div>\n    <p>Total Days: {total}</p>\n    <p>Powder Days: {powder}</p>\n    <p>backcountry Days: {backcountry}</p>\n    <p>Goal Progress: {this.calcGoalProgress(total, goal)}</p>\n        </div>\n      </section>\n    )\n  }\n} */","map":{"version":3,"sources":["C:/FIT_2020/Practice/start/react-is-fun/src/index.js"],"names":["React","Component","render","skiData","total","powder","backcountry","goal","getPercent","decimal","calcGoalProgress","SkiDayCounter","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,WAArB;AAGA,MAAMC,OAAO,GAAC;AACZC,EAAAA,KAAK,EAAC,EADM;AAEZC,EAAAA,MAAM,EAAC,EAFK;AAGZC,EAAAA,WAAW,EAAC,EAHA;AAIZC,EAAAA,IAAI,EAAC;AAJO,CAAd;;AAMA,MAAMC,UAAU,GAAGC,OAAO,IAAI;AAC5B,SAAOA,OAAO,GAAG,GAAV,GAAgB,GAAvB;AACD,CAFD;;AAGA,MAAMC,gBAAgB,GAAG,CAACN,KAAD,EAAQG,IAAR,KAAgB;AACvC,SAAOC,UAAU,CAACJ,KAAK,GAACG,IAAP,CAAjB;AACD,CAFD;;AAKA,MAAMI,aAAa,GAAG,CAAC;AAACP,EAAAA,KAAD;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA;AAA7B,CAAD,KAAwC;AAC5D,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBH,KAAhB,CADE,eAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBC,MAAjB,CAFE,eAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBC,WAAtB,CAHE,eAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBI,gBAAgB,CAACN,KAAD,EAAQG,IAAR,CAAnC,CAJE,CADF,CADF;AAUD,CAXD;;AAeAL,MAAM,eACJ,oBAAC,aAAD;AACE,EAAA,KAAK,EAAIC,OAAO,CAACC,KADnB;AAEE,EAAA,MAAM,EAAGD,OAAO,CAACE,MAFnB;AAGE,EAAA,WAAW,EAAEF,OAAO,CAACG,WAHvB;AAIE,EAAA,IAAI,EAAEH,OAAO,CAACI,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADI,EAOJK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPI,CAAN;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;;;;AAMA;;;;;;;;;;;AAUA;;;;;;AAKA;;;;;;;;;;;;;AAYA","sourcesContent":["import React, {Component} from 'react'\nimport {render} from 'react-dom'\n\n\nconst skiData={\n  total:50,\n  powder:20,\n  backcountry:10,\n  goal:100\n}\nconst getPercent = decimal => {\n  return decimal * 100 + '%'\n}\nconst calcGoalProgress = (total, goal) =>{\n  return getPercent(total/goal)\n}\n\n\nconst SkiDayCounter = ({total, powder, backcountry, goal}) => {\n  return (\n    <section>\n      <div>\n    <p>Total Days: {total}</p>\n    <p>Powder Days: {powder}</p>\n    <p>backcountry Days: {backcountry}</p>\n    <p>Goal Progress: {calcGoalProgress(total, goal)}</p>\n      </div>\n    </section>\n  )\n}\n\n\n\nrender(\n  <SkiDayCounter\n    total = {skiData.total}\n    powder= {skiData.powder}\n    backcountry={skiData.backcountry}\n    goal={skiData.goal}/>,\n  \n  document.getElementById('root')\n)\n\n/* const skiData={\n  total:50,\n  powder:20,\n  backcountry:10,\n  goal:100\n}\n\nclass SkiDayCounter extends React.Component{\n  render() {\n    return (\n      <section>\n        <div>\n    <p>Total Days: {this.props.total}</p>\n    <p>Powder: {this.props.powder}</p>\n    <p>backcountry: {this.props.total}</p>\n    <p>Goal: {this.props.goal}</p>\n        </div>\n      </section>\n    )\n  }\n}\n\nReactDOM.render(\n  <SkiDayCounter\n    total = {skiData.total}\n    powder= {skiData.powder}\n    backcountry={skiData.backcountry}\n    goal={skiData.goal}/>,\n  \n  document.getElementById('root')\n) */\n\n\n\n/* let style = {\n  backgroundColor: 'orange',\n  color: 'white',\n  fontFamily: 'Arial'\n}\n */\n/* const title = React.createElement(\n  'ul',\n  {id: 'title', className: 'header', style: style},\n  React.createElement(\n    'li',\n    {},\n    'item on our list'\n  )\n)\n */\n/* ReactDOM.render(\n  title,\n  document.getElementById('root')\n\n) */\n/* class Message extends React.Component {\n  render(){\n    console.log(this.props)\n    return (\n      <div>\n        <h1 style={{color: this.props.color}}>{this.props.msg}</h1>\n    <p> I will back in {this.props.minutes}</p>\n      </div>\n    )\n  }\n}\n */\n/* class SkiDayCounter extends Component{\n  getPercent = decimal => {\n    return decimal * 100 +'%'\n  }\n\n  calcGoalProgress = (total, goal)=>{\n    return this.getPercent(total/goal)\n  }\n  render() {\n    const {total, powder, backcountry, goal} = this.props\n    return (\n      <section>\n        <div>\n    <p>Total Days: {total}</p>\n    <p>Powder Days: {powder}</p>\n    <p>backcountry Days: {backcountry}</p>\n    <p>Goal Progress: {this.calcGoalProgress(total, goal)}</p>\n        </div>\n      </section>\n    )\n  }\n} */"]},"metadata":{},"sourceType":"module"}