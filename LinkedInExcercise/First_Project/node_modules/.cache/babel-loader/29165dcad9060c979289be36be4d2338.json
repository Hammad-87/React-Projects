{"ast":null,"code":"var _jsxFileName = \"C:\\\\FIT_2020\\\\Practice\\\\start\\\\react-is-fun\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nconst bookList = [{\n  \"title\": \"Hunger\",\n  \"Author\": \"Roxane\",\n  \"pages\": 320\n}, {\n  \"title\": \"Munger\",\n  \"Author\": \"Moxane\",\n  \"pages\": 420\n}, {\n  \"title\": \"Dunger\",\n  \"Author\": \"Doxane\",\n  \"pages\": 520\n}, {\n  \"title\": \"Munger\",\n  \"Author\": \"Moxane\",\n  \"pages\": 420\n}, {\n  \"title\": \"Dunger\",\n  \"Author\": \"Doxane\",\n  \"pages\": 520\n}];\n/* ONE OF THE MOST IMP COMPONENET IN REACT IS STATE: FOR USING STATE; WE WILL \nUSE HERE ES6 CLASS COMPONENET */\n\nconst Book = ({\n  title,\n  Author,\n  pages,\n  bookmark\n}) => {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"by: \", Author), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Pages: \", pages, \" pages\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Bookmark: \", bookmark ? 'Yes' : 'no', \" \"));\n};\n\nconst Hiring = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, \"Hiring, www.library.com\"));\n\nconst NotHiring = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, \"NotHiring, check later\"));\n\nclass Library extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: true,\n      freeBookmark: true,\n      hiring: false,\n      data: [],\n      loading: true\n    };\n\n    this.toggleOpenClosed = () => {\n      this.setState(prevState => ({\n        open: !this.state.open\n      }));\n    };\n  }\n\n  componentDidMount() {\n    console.log('The component is now mounted!');\n  }\n\n  render() {\n    //console.log(this.state)\n    //const books = this.props.books\n    const {\n      books\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, this.state.hiring ? /*#__PURE__*/React.createElement(Hiring, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(NotHiring, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"The library is \", this.state.open ? \"open\" : \"closed\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleOpenClosed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Change\"), books.map((book, i) => /*#__PURE__*/React.createElement(Book, {\n      key: i,\n      title: book.title,\n      Author: book.Author,\n      pages: book.pages,\n      bookmark: this.state.freeBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }\n    })));\n  }\n\n}\n\nrender( /*#__PURE__*/React.createElement(Library, {\n  books: bookList,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // for checking the status\n\n/* constructor(props) {\n  super(props)\n  this.state = {\n    open:true\n    //open:false\n  }\n  this.toggleOpenClosed = this.toggleOpenClosed.bind(this)\n}\n*/\n\n/* WITH FUNCTIONS */\n\n/* const Book = ({title, Author, pages}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      <p>by: {Author}</p>\n      <p>Pages: {pages} pages</p>\n    </section>\n  )\n}\n\nconst Library = ({books})=>{\n  return(\n    <div>\n      {books.map (\n        (book, i) => <Book \n                      key = {i}\n                      title ={book.title} \n                      Author = {book.Author} \n                      pages ={book.pages}/>\n      )}\n      \n    </div>\n  )\n} */\n\n/* const skiData={\n  total:50,\n  powder:20,\n  backcountry:10,\n  goal:100\n}\nconst getPercent = decimal => {\n  return decimal * 100 + '%'\n}\nconst calcGoalProgress = (total, goal) =>{\n  return getPercent(total/goal)\n}\n\n\nconst SkiDayCounter = ({total, powder, backcountry, goal}) => {\n  return (\n    <section>\n      <div>\n    <p>Total Days: {total}</p>\n    <p>Powder Days: {powder}</p>\n    <p>backcountry Days: {backcountry}</p>\n    <p>Goal Progress: {calcGoalProgress(total, goal)}</p>\n      </div>\n    </section>\n  )\n}\n\nrender(\n  <SkiDayCounter\n    total = {skiData.total}\n    powder= {skiData.powder}\n    backcountry={skiData.backcountry}\n    goal={skiData.goal}/>,\n  \n  document.getElementById('root')\n)\n */\n\n/* const skiData={\n  total:50,\n  powder:20,\n  backcountry:10,\n  goal:100\n}\n\nclass SkiDayCounter extends React.Component{\n  render() {\n    return (\n      <section>\n        <div>\n    <p>Total Days: {this.props.total}</p>\n    <p>Powder: {this.props.powder}</p>\n    <p>backcountry: {this.props.total}</p>\n    <p>Goal: {this.props.goal}</p>\n        </div>\n      </section>\n    )\n  }\n}\n\nReactDOM.render(\n  <SkiDayCounter\n    total = {skiData.total}\n    powder= {skiData.powder}\n    backcountry={skiData.backcountry}\n    goal={skiData.goal}/>,\n  \n  document.getElementById('root')\n) */\n\n/* let style = {\n  backgroundColor: 'orange',\n  color: 'white',\n  fontFamily: 'Arial'\n}\n */\n\n/* const title = React.createElement(\n  'ul',\n  {id: 'title', className: 'header', style: style},\n  React.createElement(\n    'li',\n    {},\n    'item on our list'\n  )\n)\n */\n\n/* ReactDOM.render(\n  title,\n  document.getElementById('root')\n\n) */\n\n/* class Message extends React.Component {\n  render(){\n    console.log(this.props)\n    return (\n      <div>\n        <h1 style={{color: this.props.color}}>{this.props.msg}</h1>\n    <p> I will back in {this.props.minutes}</p>\n      </div>\n    )\n  }\n}\n */\n\n/* class SkiDayCounter extends Component{\n  getPercent = decimal => {\n    return decimal * 100 +'%'\n  }\n\n  calcGoalProgress = (total, goal)=>{\n    return this.getPercent(total/goal)\n  }\n  render() {\n    const {total, powder, backcountry, goal} = this.props\n    return (\n      <section>\n        <div>\n    <p>Total Days: {total}</p>\n    <p>Powder Days: {powder}</p>\n    <p>backcountry Days: {backcountry}</p>\n    <p>Goal Progress: {this.calcGoalProgress(total, goal)}</p>\n        </div>\n      </section>\n    )\n  }\n} */","map":{"version":3,"sources":["C:/FIT_2020/Practice/start/react-is-fun/src/index.js"],"names":["React","Component","render","bookList","Book","title","Author","pages","bookmark","Hiring","NotHiring","Library","state","open","freeBookmark","hiring","data","loading","toggleOpenClosed","setState","prevState","componentDidMount","console","log","books","props","map","book","i","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {render} from 'react-dom'\n\nconst bookList = [\n  {\"title\": \"Hunger\", \"Author\": \"Roxane\", \"pages\": 320},\n  {\"title\": \"Munger\", \"Author\": \"Moxane\", \"pages\": 420},\n  {\"title\": \"Dunger\", \"Author\": \"Doxane\", \"pages\": 520},\n  {\"title\": \"Munger\", \"Author\": \"Moxane\", \"pages\": 420},\n  {\"title\": \"Dunger\", \"Author\": \"Doxane\", \"pages\": 520}\n]\n/* ONE OF THE MOST IMP COMPONENET IN REACT IS STATE: FOR USING STATE; WE WILL \nUSE HERE ES6 CLASS COMPONENET */\nconst Book = ({title, Author, pages, bookmark}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      <p>by: {Author}</p>\n      <p>Pages: {pages} pages</p>\n      <p>Bookmark: {bookmark ? 'Yes' : 'no'} </p>\n    </section>\n  )\n}\nconst Hiring = ()=>\n  <div>\n    <p>Hiring, www.library.com</p>\n  </div>\n\nconst NotHiring = () => \n  <div>\n    <p>\n      NotHiring, check later\n    </p>\n  </div>\n\n\nclass Library extends Component {  \nstate = { \n  open: true,\n  freeBookmark:true,\n  hiring: false,\n  data:[],\n  loading: true        \n}\ncomponentDidMount(){\n  console.log('The component is now mounted!')\n}\n  toggleOpenClosed=() => {\n    this.setState(prevState => ({\n      open: !this.state.open\n    }))\n  }\n  render() {\n    //console.log(this.state)\n    //const books = this.props.books\n    const{books} = this.props\n    return(\n      <div>\n         {this.state.hiring ? <Hiring/> : <NotHiring/>}\n        <h1>The library is {this.state.open ? \"open\" : \"closed\"}</h1>\n        <button onClick={this.toggleOpenClosed}>Change</button>\n        {books.map (\n          (book, i) => <Book \n                        key = {i}\n                        title ={book.title} \n                        Author = {book.Author} \n                        pages ={book.pages}\n                        bookmark = {this.state.freeBookmark}/>\n        )}\n        \n      </div>\n    )\n  }\n}\n    \nrender(\n  <Library books = {bookList}/>,\n  document.getElementById('root')\n)\n\n\n// for checking the status\n  /* constructor(props) {\n    super(props)\n    this.state = {\n      open:true\n      //open:false\n    }\n    this.toggleOpenClosed = this.toggleOpenClosed.bind(this)\n  }\n */\n/* WITH FUNCTIONS */\n/* const Book = ({title, Author, pages}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      <p>by: {Author}</p>\n      <p>Pages: {pages} pages</p>\n    </section>\n  )\n}\n\nconst Library = ({books})=>{\n  return(\n    <div>\n      {books.map (\n        (book, i) => <Book \n                      key = {i}\n                      title ={book.title} \n                      Author = {book.Author} \n                      pages ={book.pages}/>\n      )}\n      \n    </div>\n  )\n} */\n\n\n\n\n/* const skiData={\n  total:50,\n  powder:20,\n  backcountry:10,\n  goal:100\n}\nconst getPercent = decimal => {\n  return decimal * 100 + '%'\n}\nconst calcGoalProgress = (total, goal) =>{\n  return getPercent(total/goal)\n}\n\n\nconst SkiDayCounter = ({total, powder, backcountry, goal}) => {\n  return (\n    <section>\n      <div>\n    <p>Total Days: {total}</p>\n    <p>Powder Days: {powder}</p>\n    <p>backcountry Days: {backcountry}</p>\n    <p>Goal Progress: {calcGoalProgress(total, goal)}</p>\n      </div>\n    </section>\n  )\n}\n\nrender(\n  <SkiDayCounter\n    total = {skiData.total}\n    powder= {skiData.powder}\n    backcountry={skiData.backcountry}\n    goal={skiData.goal}/>,\n  \n  document.getElementById('root')\n)\n */\n/* const skiData={\n  total:50,\n  powder:20,\n  backcountry:10,\n  goal:100\n}\n\nclass SkiDayCounter extends React.Component{\n  render() {\n    return (\n      <section>\n        <div>\n    <p>Total Days: {this.props.total}</p>\n    <p>Powder: {this.props.powder}</p>\n    <p>backcountry: {this.props.total}</p>\n    <p>Goal: {this.props.goal}</p>\n        </div>\n      </section>\n    )\n  }\n}\n\nReactDOM.render(\n  <SkiDayCounter\n    total = {skiData.total}\n    powder= {skiData.powder}\n    backcountry={skiData.backcountry}\n    goal={skiData.goal}/>,\n  \n  document.getElementById('root')\n) */\n\n\n\n/* let style = {\n  backgroundColor: 'orange',\n  color: 'white',\n  fontFamily: 'Arial'\n}\n */\n/* const title = React.createElement(\n  'ul',\n  {id: 'title', className: 'header', style: style},\n  React.createElement(\n    'li',\n    {},\n    'item on our list'\n  )\n)\n */\n/* ReactDOM.render(\n  title,\n  document.getElementById('root')\n\n) */\n/* class Message extends React.Component {\n  render(){\n    console.log(this.props)\n    return (\n      <div>\n        <h1 style={{color: this.props.color}}>{this.props.msg}</h1>\n    <p> I will back in {this.props.minutes}</p>\n      </div>\n    )\n  }\n}\n */\n/* class SkiDayCounter extends Component{\n  getPercent = decimal => {\n    return decimal * 100 +'%'\n  }\n\n  calcGoalProgress = (total, goal)=>{\n    return this.getPercent(total/goal)\n  }\n  render() {\n    const {total, powder, backcountry, goal} = this.props\n    return (\n      <section>\n        <div>\n    <p>Total Days: {total}</p>\n    <p>Powder Days: {powder}</p>\n    <p>backcountry Days: {backcountry}</p>\n    <p>Goal Progress: {this.calcGoalProgress(total, goal)}</p>\n        </div>\n      </section>\n    )\n  }\n} */"]},"metadata":{},"sourceType":"module"}